device.rules = [
    {
        matches = [{
            # all keys must match the value. ! negates. ~ starts regex.
            media.class = "Audio/Source"
            #node.name = "~*Elgato_Systems_Elgato_Wave_3_*.mono-fallback$"
            node.nick = "Elgato Wave 3"
        }]
        actions = { update-props = {
            device.description = "Elgato Wave:3"
            node.pause-on-idle = false
            node.suspend-on-idle = false
            #node.always-process = true
            # avoid weird bug where the there is
            # no more input from the device after
            # it became idle or wasn't connected
            # to a node
        }}
    }
    {
        matches = [{
                # all keys must match the value. ! negates. ~ starts regex.
                media.class = "Audio/Sink"
                device.name = "~Corsair_ST100*"
        }]
        actions = { update-props = {
                device.description = "Corsair ST100"
                device.nick = "Corsair ST100"
                node.description = "Corsair ST100"
        }}
    }
    {
        matches = [{
            # all keys must match the value. ! negates. ~ starts regex.
            media.class = "Audio/Device"
            device.name = "~Corsair_ST100*"
        }]
        actions = { update-props = {
            device.description = "Corsair ST100"
            device.nick = "Corsair ST100"
            node.description = "Corsair ST100"
        }}
    }
    #{
    #    matches = [{
    #        media.class = "Audio/Source"
    #        node.nick = "Elgato HD60 X"
    #    }]
    #    actions = { update-props = {
    #        audio.format = S24LE
    #    }}
    #}
]